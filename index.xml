<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fanison的博客</title>
    <link>http://fanison.info/</link>
    <description>Recent content on fanison的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Sun, 24 Nov 2019 21:27:10 +0800</lastBuildDate>
    
	<atom:link href="http://fanison.info/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Css基础</title>
      <link>http://fanison.info/posts/css%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sun, 24 Nov 2019 21:27:10 +0800</pubDate>
      
      <guid>http://fanison.info/posts/css%E5%9F%BA%E7%A1%80/</guid>
      <description>一、语法  样式语法
选择器 { 属性名: 属性值; /*注释*/ }  at语法
@charset &amp;quot;UTF-8&amp;quot;; @import url(style.css); @media (min-width: 100px) and (max-width: 200px) { 语法一 }  注意事项： @charset必须放在第一行
 at语法必须以分号;结尾
 所有符号都是英文符号，区分大小写
  二、css调试  使用vscode看颜色 使用WebStorm看颜色 使用开发者工具看警告 border调试法:
- 怀疑某元素有问题就给其加border - border没出现？说明选择器错了或者语法错了 - border出现？看看边界是否符合预期 - bug解决后把border删掉  Example: 段落p背景颜色不显示，使用border调试
&amp;lt;style&amp;gt; p{ background:black color:red; } &amp;lt;/style&amp;gt; &amp;lt;p&amp;gt;你好&amp;lt;/p&amp;gt;  三、资料查找 Google 关键字 MDN flex mdn  CSS tricks flex css tricks</description>
    </item>
    
    <item>
      <title>HTML常用标签</title>
      <link>http://fanison.info/posts/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Sun, 24 Nov 2019 21:17:16 +0800</pubDate>
      
      <guid>http://fanison.info/posts/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      <description>一、a 标签  属性 href、target、download、rel=noopener
&amp;lt;a href=&amp;quot; &amp;quot;&amp;gt;&amp;lt;/a&amp;gt;  href的取值
 网址
&amp;lt;a href=&amp;quot;https://fanison.info&amp;quot;&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;http://fanison.info&amp;quot;&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;//fanison.info&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;  路径
&amp;lt;a href=&amp;quot;./posts/index.html&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;  伪协议
&amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;Click&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;javascript:alert(1);&amp;quot;&amp;gt;js伪代码&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;mailto:yafanison@gmail.com&amp;quot;&amp;gt;发邮件给我&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;tel:18312345678&amp;quot;&amp;gt;Call Me&amp;lt;/a&amp;gt;   id
&amp;lt;a href=&amp;quot;#id&amp;quot;&amp;gt;Call Me&amp;lt;/a&amp;gt;  target的取值
&amp;lt;a href=&amp;quot;http://fanison.info&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;新窗口打开&amp;lt;/a&amp;gt; &amp;lt;a href=&amp;quot;http://fanison.info&amp;quot; target=&amp;quot;_self&amp;quot;&amp;gt;当前页面加载&amp;lt;/a&amp;gt;  _parent: 加载响应到当前浏览上下文的父浏览上下文 _top:加载响应进入顶层浏览上下文
 download：下载页面
  二、 tabel 标签 &amp;lt;table&amp;gt; &amp;lt;thead&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;姓名&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;性别&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/thead&amp;gt; &amp;lt;tbody&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;小米&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;男&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;苹果&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;女&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/tbody&amp;gt; &amp;lt;tfoot&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;x&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;y&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/tfoot&amp;gt; &amp;lt;/table&amp;gt;  - border-collapse 用来决定表格的边框是分开的还是合并的。在分隔模式下，相邻的单元格都拥有独立的边框。在合并模式下，相邻单元格共享边框。 - border-spacing 属性指定相邻单元格边框之间的距离</description>
    </item>
    
    <item>
      <title>HTML入门笔记1</title>
      <link>http://fanison.info/posts/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Tue, 19 Nov 2019 20:24:05 +0800</pubDate>
      
      <guid>http://fanison.info/posts/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</guid>
      <description>1. HTML 起手式 新建demo--&amp;gt;新建html--&amp;gt;&amp;lt;!DOCTYPE html&amp;gt; 2. 全局属性  style 元素CSS样式声明
&amp;lt;style&amp;gt; style{display:block;} #xxx{ color:green; } &amp;lt;/style&amp;gt;    使得style可见，前提需将style放入body中 - class 类名列表
 &amp;lt;style&amp;gt; [class=&amp;quot;hder&amp;quot;]{ color:red; } .hder{ color:green; } &amp;lt;/style&amp;gt; &amp;lt;header class=&amp;quot;hder&amp;quot;&amp;gt;这是我的html笔记&amp;lt;/header&amp;gt;  如果class有多个属性，则[class=&amp;quot;属性&amp;quot;]需写入全部属性才可匹配对应的class，使用 .属性方式写入class的某一个属性即可匹配class - contenteditable 元素是否可被用户编辑  hidden 隐藏元素  id 唯一标识符   不到万不得已不使用id，id不报错
 tabindex 整数属性，指示元素是否可以获取输入焦点（可聚焦），是否应该参与顺序键盘导航 正值通过顺序键盘导航进行聚焦和访问,0 表示最后访问，-1表示不可通过键盘导航到达 title 表示与其所属元素相关信息的文本   3.章节标签    章节      &amp;lt;section&amp;gt; 表示文档中的一个区域（或节），比如，内容中的一个专题组，一般来说会有包含一个标题（heading）。一般通过是否包含一个标题 (- element) 作为子节点 来 辨识每一个。&amp;rdquo;) 定义文档中的一个章节   &amp;lt;h1&amp;gt;,&amp;lt;h2&amp;gt;,&amp;lt;h3&amp;gt;,&amp;lt;h4&amp;gt;,&amp;lt;h5&amp;gt;,&amp;lt;h6&amp;gt; 六层文档标题，&amp;lt;h1&amp;gt; 最大,&amp;lt;h6&amp;gt; 最小   &amp;lt;article&amp;gt; 可以独立于内容其余部分的完整独立内容块   &amp;lt;p&amp;gt; 定义一个段落   &amp;lt;header&amp;gt; 定义页面或章节的头部   &amp;lt;footer&amp;gt; 定义页面或章节的尾部   &amp;lt;main&amp;gt; 定义文档中主要或重要的内容。   &amp;lt;aside&amp;gt; 定义和页面内容关联度较低的内容   &amp;lt;div&amp;gt; 是一个通用型的流内容容器，它在语义上不代表任何特定类型的内容，它可以被用来对其它元素进行分组，一般用于样式化相关的需求（使用 class 或 id 特性) 或者对具有相同特性的一组元素进行分组 (比如 lang)，它应该在没有任何其它语义元素可用时才使用 (比如  或 ) 。&amp;rdquo;) 代表一个通用的容器    4.</description>
    </item>
    
    <item>
      <title>Hugo搭建博客</title>
      <link>http://fanison.info/posts/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sun, 17 Nov 2019 21:04:49 +0800</pubDate>
      
      <guid>http://fanison.info/posts/hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>hugo官网搭建过程
1. 安装hugo 2. Create a New Site hugo new site yafanisonya.io-creator  3. Add a Theme  cd yafanisonya.io-creator/ git init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke echo &#39;theme = &amp;quot;ananke&amp;quot;&#39; &amp;gt;&amp;gt; config.toml  4. Add Some Content  hugo new posts/my-first-post.md  将draft值改为false，否则为草稿状态
5. Start the Hugo server  hugo server -D  6. Customize the Theme 7. Build static pages  hugo -D  8. 本地推送至github 在/d/github/yafanisonya.io-creator中创建.gitignore文件，将/public写入，使得public自成仓库</description>
    </item>
    
    <item>
      <title>Git入门———远程仓库</title>
      <link>http://fanison.info/posts/git%E5%85%A5%E9%97%A8%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</link>
      <pubDate>Sun, 17 Nov 2019 20:39:12 +0800</pubDate>
      
      <guid>http://fanison.info/posts/git%E5%85%A5%E9%97%A8%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</guid>
      <description>1. 新建仓库 Repository name：填写仓库名称
2. 上传代码  git remote add origin git@xxxxxxx 在本地添加远程仓库地址 git push -u origin master 推送本地master到远程origin的master分支  3. 下载代码 git clone git@?/xxx.git 下载代码 git clone https://github.com/?/xxx.git 注： 下载别人代码使用https地址 下载自己代码https、ssh均可  4. 上传到两个远程仓库  第二个仓库上传时使用如下代码： git remote add origin2 git@xxx.git git push -u origin2 master  5. git高级操作 使用bash alias简化命令 touch ~/.bashrc echo &#39;alias ga=&amp;quot;git add&amp;quot;&#39;&amp;gt;&amp;gt; ~/.bashrc echo &#39;alias gc=&amp;quot;git commit -v&amp;quot;&#39;&amp;gt;&amp;gt; ~/.bashrc echo &#39;alias gl=&amp;quot;git pull&amp;quot;&#39;&amp;gt;&amp;gt; ~/.</description>
    </item>
    
    <item>
      <title>Git入门本地仓库</title>
      <link>http://fanison.info/posts/git%E5%85%A5%E9%97%A8%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93/</link>
      <pubDate>Sun, 17 Nov 2019 19:01:56 +0800</pubDate>
      
      <guid>http://fanison.info/posts/git%E5%85%A5%E9%97%A8%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93/</guid>
      <description>1. 配置 git git 六行配置  git config --global user.name 你的英文名 git config --global user.email 你的邮箱 git config --global push.default simple git config --global core.quotepath false git config --global core.editor &amp;quot;code --wait&amp;quot; git config --global core.autocrlf input  2. 创建目录  git init 创建.git 目录 git status -sb 查看代码在缓存区状态（？未添加 ， A 已添加） -sb 显示总结和分支  3. 添加文件 git add 将文件添加到暂存区  4. 提交代码  git commit -m &amp;quot;注释&amp;quot; 将暂存区内容正式提交到本地仓库 git commit -v 显示差异信息和更多有意义的信息  5.</description>
    </item>
    
  </channel>
</rss>